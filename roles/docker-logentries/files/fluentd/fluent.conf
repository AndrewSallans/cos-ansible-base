###### host ######

<source>
  type tail
  path /var/log/auth.log
  pos_file /log/host.pos
  tag host-reform.auth.log
  format syslog
</source>

<source>
  type tail
  path /var/log/supervisor/*.log
  pos_file /log/host.pos
  tag host-reform.*
  format none
</source>

<match host-reform.var.log.**>
  type record_reformer
  tag host-reform.${tag_parts[3..-1].join('.')}
</match>

<match host-reform.**>
  type record_reformer
  remove_keys host
  pid ${pid}
  ident ${ident}
  source ${tag_parts[1..-1].join('.')}
  time ${time}
  hostname ${hostname}
  tag host-filter.${tag_parts[1..-1].join('.')}
</match>

###### docker ######

<source>
  type tail
  path /var/lib/docker/containers/*/*-json.log
  pos_file /log/docker.pos
  time_format %Y-%m-%dT%H:%M:%S
  tag docker-format.*
  format json
</source>

<match docker-format.var.lib.docker.containers.*.*-json.log>
  type docker_format
  container_id ${tag_parts[5]}
  tag docker-reform
</match>

<match docker-reform>
  type record_reformer
  container_id ${container_id[0..12]}
  container_name ${container_name[1..-1]}
  time ${time}
  hostname ${hostname}
  tag docker-filter.${container_name[1..-1].split('_').join('.')}
</match>

###### filters ######

#<match host-filter.**>
#  type rewrite_tag_filter
#  rewriterule1 message .+ logentries-host-tag
#</match>

#<match docker-filter.*.myapp.**>
#  type rewrite_tag_filter
#  rewriterule1 log Attempt to decode JSON with unexpected mimetype: text/html; charset=utf-8 clear
#  rewriterule2 log \[INFO\]\[tornado.access\]: 200 GET \/status clear
#  rewriterule3 log .+ logentries-docker-tag
#</match>

###### logentries ######

<match logentries-host-tag host-filter.**>
  type order
  add_tag_prefix ordered

  #{
  #  "host": "myapp-web-01",
  #  "ident": "auth",
  #  "pid": "16036",
  #  "message": "*SYSLOG CHECK* Failed to detect check line [30OziUwzeFVUyZ88HrGj] sent to SYSLOG",
  #  "source": "auth.log",
  #  "time": "2015-07-15 22:10:29 +0000",
  #  "hostname": "myapp-web-01.iad.stage.domain.tld"
  #}

  after_order_keys hostname,source,message,pid,ident,time
</match>

<match ordered.logentries-host-tag ordered.host-filter.**>
  type record_reformer
  tag host.${source}
</match>

<match logentries-docker-tag docker-filter.**>
  type order
  add_tag_prefix ordered

  #{
  #  "log": "[2015-07-15 22:10:02,154][INFO][tornado.access]: 200 GET /data?path=/\n",
  #  "stream": "stderr",
  #  "container_id": "0bf478aca69d",
  #  "container_name": "stage_myapp_server_2",
  #  "time": "2015-07-15 22:10:02 +0000",
  #  "hostname": "myapp-web-01.iad.stage.domain.tld"
  #}

  after_order_keys hostname,container_name,log,container_id,stream,time
</match>

<match ordered.logentries-docker-tag ordered.docker-filter.**>
  type record_reformer
  tag docker.${container_name.split('_')[0..-2].join('_')}
</match>

<match host.** docker.**>
  type logentries
  flush_interval 0s
  default_token 11111111-2222-3333-4444-555555555555
  use_ssl true
  use_json true
  config_path /etc/fluent/logentries-tokens.yml
</match>

###### clear ######

<match clear>
  type null
</match>
