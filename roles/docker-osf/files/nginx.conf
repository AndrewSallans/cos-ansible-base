user  www-data;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    ##
    # Basic Settings
    ##

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    ##
    # Logging Settings
    ##

    log_format  main  '$remote_addr - $upstream_cache_status $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1400;
    gzip_comp_level 2;
    gzip_buffers 4 32k;
    gzip_types text/plain text/css image/png image/gif image/jpeg application/x-javascript text/xml text/javascript application/json;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name test-api.osf.io;
        return 301 https://test-api.osf.io$request_uri;
    }

    server {
        listen 443;
        server_name test-api.osf.io;

        ssl on;
        ssl_certificate /etc/ssl/private/default.crt;
        ssl_certificate_key /etc/ssl/private/default.key;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        root /code;
        client_max_body_size 250M;

        location /v2/static {
            alias /code/api/static/vendor;
        }

        location / {
            # Pass requests to uwsgi application
            include uwsgi_params;
            uwsgi_pass uwsgi://apiserver:8000;
        }
    }

    server {
        listen 80;
        server_name test.osf.io;
        return 301 https://test.osf.io$request_uri;
    }

    server {
        listen 443;
        server_name test.osf.io;
        keepalive_timeout 15;

        ssl on;
        ssl_certificate /etc/ssl/private/default.crt;
        ssl_certificate_key /etc/ssl/private/default.key;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # real_ip_header X-Forwarded-For;
        # set_real_ip_from 192.168.255.0/24;

        root /code;
        client_max_body_size 250M;

        location ~ /static/addons/(.*?)/(.*) {
            alias /code/website/addons/$1/static/$2;
        }

        location /static/ {
            alias /code/website/static/;
        }

        location /sharejs {
            rewrite "^/sharejs/(.*)" /$1 break;

            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header  Host  $http_host;
            proxy_pass http://sharejs:7007;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location / {
            if (-f $document_root/maintenance.html) {
                return 503;
            }

            # Pass requests to uwsgi application
            include uwsgi_params;
            uwsgi_pass uwsgi://server:5000;

            # URL rewrites
            rewrite "^/project/.*?/node/(.*)" https://$server_name/$1 permanent;
            rewrite "^/project/([a-zA-Z0-9]{5,}.*)" https://$server_name/$1 permanent;
            rewrite "^/profile/([a-zA-Z0-9]{5,})" https://$server_name/$1 permanent;
        }

        error_page 503 @maintenance;
        location @maintenance {
            root /code/website/static/maintenance;
            rewrite ^(.*)$ /$1 break;
            try_files /$uri /index.html =404;
            return 200;
        }
    }
}
