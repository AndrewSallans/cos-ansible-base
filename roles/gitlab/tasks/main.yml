- name: Install required packages
  apt: pkg={{item}}
  with_items:
    - build-essential
    - zlib1g-dev
    - libyaml-dev
    - libssl-dev
    - libgdbm-dev
    - libreadline-dev
    - libncurses5-dev
    - libffi-dev
    - curl
    - openssh-server
    - redis-server
    - checkinstall
    - libxml2-dev
    - libxslt-dev
    - libcurl4-openssl-dev
    - libicu-dev
    - logrotate
    - python-docutils
    - git-core

- include: ruby.yml
- include: database.yml

- name: Check if the GitLab repo has already been cloned
  stat: path={{gitlab_repo_dir}}
  register: gitlab_repo_dir_check

- name: Clone GitLab repo
  git:
    repo={{ gitlab_repo_url }}
    dest={{ gitlab_repo_dir }}
    version=7-0-stable
  when: gitlab_repo_dir_check.stat.isdir is defined and gitlab_repo_dir_check.stat.isdir == false


- name: Update gitlab configuration
  template: src=gitlab-config.j2 dest="{{gitlab_repo_dir}}/config/gitlab.yml" owner={{gitlab_user}}

- name: Make sure the gitlab user has ownership of the log directory
  file: path={{gitlab_repo_dir}}/log
    owner={{gitlab_user}}
    recurse=yes
    state=directory
    mode=0744

- name: Make sure the gitlab user has ownership of the tmp directory
  file:
    path={{gitlab_repo_dir}}/tmp
    owner={{gitlab_user}}
    recurse=yes
    state=directory
    mode=0744

- name: Make sure gitlab user can write to tmp/pids/
  file: path={{gitlab_repo_dir}}/tmp/pids/
    mode=0744

- name: Make sure gitlab user can write to tmp/sockests
  file: path={{gitlab_repo_dir}}/tmp/sockets/
    mode=0744

- name: Make sure satellites directory exists
  file: path={{gitlab_satellites_dir}} state=directory
    owner={{gitlab_user}}

- name: Make sure gitlab user can write to public/uploads directory
  file: path={{gitlab_repo_dir}}/public/uploads state=directory mode=0744

- name: Update unicorn config
  template:
    src=unicorn.rb.j2
    dest={{gitlab_repo_dir}}/config/unicorn.rb
    owner={{gitlab_user}}

- name: Copy Rack attack config
  copy:
    src=rack_attack.rb
    dest={{gitlab_repo_dir}}/config/initializers/rack_attack.rb
    owner={{gitlab_user}}

- name: Configure git
  template: src=gitconfig.j2 dest=/home/{{gitlab_user}}/.gitconfig owner={{gitlab_user}}

- name: Configure database
  template:
    src=database.j2
    dest={{gitlab_repo_dir}}/config/database.yml
    owner=git
    mode=0700

- name: Install bundler
  command: "gem install bundler"

# NOTE: The option says "without mysql"
- name: Install gems
  command: "sudo -u git -H bundle install --deployment --without development test mysql aws"
  args:
    chdir: /home/{{gitlab_user}}/gitlab


- name: Make sure postfix is uninstalled
  apt: pkg=postfix state=absent
